% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/outlierDetection.R
\name{FuncDetectOutlierPlantMaize}
\alias{FuncDetectOutlierPlantMaize}
\title{FuncDetectOutlierPlantMaize}
\usage{
FuncDetectOutlierPlantMaize(datain, dateBeforeTrt, param1, param2, param3,
  paramGeno, paramCol, paramRow, threshold, nCol, nRow,
  genotype.as.random = FALSE, timeColumn)
}
\arguments{
\item{datain}{input dataframe, a spatio-temporal data.frame}

\item{dateBeforeTrt}{character, date just before treatment in the experiment}

\item{param1}{character, name of a phenotypic variable in datain (ex: Biomass)}

\item{param2}{character, name of a phenotypic variable in datain (ex: plant height)}

\item{param3}{character, name of a phenotypic variable in datain (ex: phyllocron)}

\item{paramGeno}{character, name of the genotype variable in datain}

\item{paramCol}{character, name of the Line variable in the datain}

\item{paramRow}{character, name of the position variable in datain}

\item{threshold}{numeric,}

\item{nCol}{numeric, nunber of lines in the lattice platform (28 for phenoarch)}

\item{nRow}{numeric, nunber of columns in the lattice platform (60 for phenoarch)}

\item{genotype.as.random}{logical, If TRUE, the genotype is included as random effect 
in the model. The default is FALSE. (see the SpATS() help)}

\item{timeColumn}{character, name of the time points column in datain (ex: Time)}
}
\value{
return a list of 4 elements
\describe{
 \item{outputDataframe}{ a data.frame with the used data set, the fitted values 
                       and residuals calculated by the model, 
                       the flag of outliers}
 \item{smallOutlier}{a data.frame of the detected "small" outliers}
 \item{bigOutlier}{a data.frame of the detected "big" outliers}
 \item{m1}{A list of the SpATS results for param1 (see the SpATS() help)}
 \item{m2}{A list of the SpATS results for param2 (see the SpATS() help)}
 \item{m3}{A list of the SpATS results for param3 (see the SpATS() help)}
}
}
\description{
function to detect plant outliers in a temporal lattice experiment 
      on Maize which can be extended to others experiment types. 
 The criteria needs 3 phenotypes (ex for maize: the estimated biomass, 
 plant height and phyllocron)
 Please, take a look of the structure of the example dataset: plant4
 \describe{
   \item{plants are identified as "small outlier plant"}{ if for biomass AND phyllocron
             res_i < mu_{res} - qnorm(threshold) * sd_{res}}  
   \item{plants are identified as "big outlier plant"}{ if for biomass AND plant height
             res_i > mu_{res} + qnorm(threshold) * sd_{res} } 
 }
}
\details{
see SpATS() from the SpATS R library
The input dataset must contain the following columns:
 In the case of a plant experiment in phenoarch platform
\describe{
 \item{1}{the estimated biomass, numeric}
 \item{2}{the estimated plant height, numeric}
 \item{3}{the estimated phyllocron, numeric}
 \item{4}{the genotype id, character}
 \item{5}{the lines in the greenhouse or lattice, numeric}
 \item{6}{the columns in the greenhouse or lattice, numeric}
 }
 In other kind of lattice platform
 \describe{
 \item{1}{param1 a numeric phenotypic parameter}
 \item{2}{param2 a numeric phenotypic parameter}
 \item{3}{param3 a numeric phenotypic parameter}
 \item{4}{the genotype id, character}
 \item{5}{the lines in the platform or lattice, numeric}
 \item{6}{the columns in the platform or lattice, numeric}
}
}
\examples{
\donttest{
test<-FuncDetectOutlierPlantMaize(datain=phenoarchToy,dateBeforeTrt="2017-04-27",
                param1="Biomass_Estimated",param2="Height_Estimated",
                param3="phyllocron",paramGeno="Geno",
                paramCol="Line",paramRow="Position",
                threshold=0.95,nCol=28,nRow=60,genotype.as.random=FALSE,
                timeColumn = "Time")
plot(test$m1)  
plot(test$m2)  
plot(test$m3) 
ggplot(data=test$outputDataframe,aes(x=fittedP1,y=devResP1)) + geom_point()
ggplot(data=test$outputDataframe,aes(x=fittedP2,y=devResP2)) + geom_point()
ggplot(data=test$outputDataframe,aes(x=fittedP3,y=devResP3)) + geom_point()
# a summary of the detected outlier
print(test$smallOutlier)
print(test$bigOutlier)
}
}
